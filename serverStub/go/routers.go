/*
 * Eyada API
 *
 * CRUD operations for Doctors and Patients, and the Eyade-Scheduler
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package eyadaAPI

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"DeleteOrder",
		strings.ToUpper("Delete"),
		"/doctor/{doctorID}",
		DeleteOrder,
	},

	Route{
		"GetDoctorByID",
		strings.ToUpper("Get"),
		"/doctor/{organizationID}",
		GetDoctorByID,
	},

	Route{
		"GetDoctorByOrgID",
		strings.ToUpper("Get"),
		"/doctor/{doctorID}",
		GetDoctorByOrgID,
	},

	Route{
		"GetDoctors",
		strings.ToUpper("Get"),
		"/doctor",
		GetDoctors,
	},

	Route{
		"PostDoctor",
		strings.ToUpper("Post"),
		"/doctor",
		PostDoctor,
	},

	Route{
		"UpdateDoctor",
		strings.ToUpper("Put"),
		"/doctor/{doctorID}",
		UpdateDoctor,
	},

	Route{
		"CreateOrganization",
		strings.ToUpper("Post"),
		"/organization",
		CreateOrganization,
	},

	Route{
		"DeleteOrganization",
		strings.ToUpper("Delete"),
		"/organization/{organizationID}",
		DeleteOrganization,
	},

	Route{
		"GetInventory",
		strings.ToUpper("Get"),
		"/organization/{organizationID}",
		GetInventory,
	},

	Route{
		"UpdateOrganization",
		strings.ToUpper("Put"),
		"/organization/{organizationID}",
		UpdateOrganization,
	},

	Route{
		"CreatePatient",
		strings.ToUpper("Post"),
		"/patient",
		CreatePatient,
	},

	Route{
		"DeletePatient",
		strings.ToUpper("Delete"),
		"/patient/{patientID}",
		DeletePatient,
	},

	Route{
		"GetPatientsByDocotr",
		strings.ToUpper("Get"),
		"/patient/{doctorID}",
		GetPatientsByDocotr,
	},

	Route{
		"GetPatientsByID",
		strings.ToUpper("Get"),
		"/patient/{patientID}",
		GetPatientsByID,
	},

	Route{
		"GetPatientsByOrganization",
		strings.ToUpper("Get"),
		"/patient/{organizationID}",
		GetPatientsByOrganization,
	},

	Route{
		"UpdatePatient",
		strings.ToUpper("Put"),
		"/patient/{patientID}",
		UpdatePatient,
	},
}
